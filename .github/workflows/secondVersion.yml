name: Lint, test and delpoy a project (Second variant)
on: 
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get the code (as we do not have it by defult)
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-mode-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Run linting
        continue-on-error: true
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get the code (as we do not have it by defult)
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-mode-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Run unit tests
        id: running-tests
        run: npm test
      - name: Upload test report
        if: failure() && steps.running-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-js: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get the code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-mode-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build the project
        run: npm run build
      - name: Publish JS filename
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifact
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output content
        run: ls
      - name: Output JS filename
        run: echo "${{ needs.build.outputs.script-js }}"
      - name: Deploy
        run: |
          echo "Deploying ......." 
  reusable-deploy:
    needs: build
    uses: ./.github/workflows/reusable.yml
    with:
      artifact-name: dist-files
    secrets:
      some-secret: ${{ secret.DEMO_SECRET }}
  print-deploy-result:
    needs: reusable-deploy
    steps:
      - name: Print deploy result
        run: echo ${{ needs.deploy.outputs.result }}
  report:
    needs: [build, lint]
    if: failure() 
    runs-on: ubuntu-latest
    steps:
      - name: Output info
        run: |
          echo "Something went wrong"
          echo ${{ toJSON(github) }} 

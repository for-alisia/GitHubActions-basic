name: Lint, test and delpoy a project (Second variant)
on: 
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get the code (as we do not have it by defult)
        uses: actions/checkout@v3
      - name: Load and cache dependencies
        uses: ./.github/actions/cachedDeps
        with:
          caching: 'false'
      - name: Run linting
        continue-on-error: true
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get the code (as we do not have it by defult)
        uses: actions/checkout@v3
      - name: Load and cache dependencies
        id: install
        uses: ./.github/actions/cachedDeps
      - name: Output information
        run: echo "Cache used? ${{steps.install.outputs.used-cache}}"
      - name: Run unit tests
        id: running-tests
        run: npm test
      - name: Upload test report
        if: failure() && steps.running-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-js: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get the code
        uses: actions/checkout@v3
      - name: Load and cache dependencies
        uses: ./.github/actions/cachedDeps
      - name: Build the project
        run: npm run build
      - name: Publish JS filename
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get the code
        uses: actions/checkout@v3
      - name: Get build artifact
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output content
        run: ls
      - name: Output JS filename
        run: echo "${{ needs.build.outputs.script-js }}"
      - name: Deploy
        uses: ./.github/actions/deployS3
        id: aws-deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          bucket: some-aws-bucket
          dist-folder: ./dist-files
      - name: Output URL
        run: |
          echo "Live url: ${{ steps.aws-deploy.outputs.website-url }}" 
  report:
    needs: [build, lint]
    if: failure() 
    runs-on: ubuntu-latest
    steps:
      - name: Output info
        run: |
          echo "Something went wrong"
          echo ${{ toJSON(github) }} 
